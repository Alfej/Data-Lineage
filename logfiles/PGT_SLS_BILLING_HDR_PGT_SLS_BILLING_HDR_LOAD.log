20250807-221737::PEPCMN

BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:17:37 2025 PID: 15446
 
+---------+---------+---------+---------+---------+---------+---------+----

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 1 second.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:17:38-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  
  EXEC PEPCMN_P.STEP_STRT('ACQ', 'PGT_SLS_BILLING_HDR', 'PGT_SLS_BILLING_HDR_LOAD', '/etlapps/prds2/acq/sales/logs/PGT_SLS_BILLING_HDR_PGT_SLS_BILLING_HDR_LOAD.log');

 *** Insert completed. One row added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
************ START EXECUTING TPT GENERIC SCRIPT **************
/etlapps/prds2/acq/stg/bin/acq_da_bpl_load_files_tpt_generic_main.ksh[10]: [: PGT_ZGGL_OTC_CVI_BILLING_HDR_*.txt: unknown operator
PGT_SLS_BILLING_HDR
PGT_ZGGL_OTC_CVI_BILLING_HDR_*.txt
pgt_sls_billing_hdr.prcs
load_main_pgt_sls_billing_hdr_stg.ksh
ACQ
PGT_SLS_BILLING_HDR
PGT_SLS_BILLING_HDR_LOAD
sales
PGT_SLS_BILLING_HDR.PGT_SLS_BILLING_HDR_LOAD.wkf
/etlapps/prds2/acq/stg/SrcFiles/PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt
gzip: /etlapps/prds2/acq/stg/SrcFiles/PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt: unknown suffix -- ignored
The Source File is :/etlapps/prds2/acq/stg/SrcFiles/PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt
/etlapps/prds2/acq/stg/SrcFiles/PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt
/etlapps/prds2/acq/stg/SrcFiles/pgt_sls_billing_hdr.prcs process file created successfully
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:18:08 2025 PID: 19663
 
+---------+---------+---------+---------+---------+---------+---------+----
      .set titledashes off;
+---------+---------+---------+---------+---------+---------+---------+----
      .run file /etlapps/prds2/acq/stg/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 6 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
      .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----
      .set width 4500
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
      .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

      SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
2025-08-07 22:18:14-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
      .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
      
      INSERT INTO PEPCMN_P_DATA.SRC_FILE_STATCS
      (ACTVTY_ID, BTCH_ID, FILESET_NM, FILE_NM, FILE_SIZE, FILE_RCRD_CNT)
      SELECT ACTVTY_ID, MAX(BTCH_ID), UPPER('PGT_SLS_BILLING_HDR'), 'PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt', '56947940' , '126575'
      FROM PEPCMN_P.ACTVTY_EVNT 
      WHERE ACTVTY_ID IN ( SELECT ACTVTY_ID FROM PEPCMN_P.ACTVTY 
                 WHERE  SYS_NM='ACQ' 
                 AND ACTVTY_NM='PGT_SLS_BILLING_HDR') 
      GROUP BY 1,3,4,5,6;

 *** Insert completed. One row added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
      .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
      
      .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
      .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
grep: /etlapps/prds2/acq/sales/tmp/PGT_SLS_BILLING_HDR.PGT_SLS_BILLING_HDR_LOAD.wkf: No such file or directory
Executing append_rownum task
FilPat:ACQ_PGT_ZGGL_OTC_CVI_BILLING_HDR_*.txt
Delimiter:|~|
Delim_length:3
/etlapps/prds2/acq/stg/SrcFiles/ACQ_PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt
Src_File:/etlapps/prds2/acq/stg/SrcFiles/ACQ_PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt
fil:ACQ_PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt
NewSrcFile:BKP_ACQ_PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt
Backup file created successfully
RecordCount:126575
Sequential File Nm: SEQACQPGTZGGLOTCCVIBILLINGHDRtxt.seq
Started Adding Line No @ 2025-08-07_22:18:15
Sequential file created successfully
Completed Adding Line No @ 2025-08-07_22:18:15
The original source file was modified to have row numbers after taking backup @ 2025-08-07_22:18:16
Actual file zipped successfully @ 2025-08-07_22:18:18
Archived the file successfully @ 2025-08-07_22:18:18
Executing tpt_pre task
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:18:18 2025 PID: 21018
 
+---------+---------+---------+---------+---------+---------+---------+----

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 11 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SET QUERY_BAND = 'ltype=acq;ltask=pre_upload;ltbl=pgt_sls_billing_hdr_stg;' FOR SESSION;

 *** Set QUERY_BAND accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:18:29-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We need to drop the log table if necessary
  --
  select 1 from dbc.tablesv 
  where 
    LOWER(databasename) = LOWER('ACQ_P_UTIL') and
    LOWER(tablename) = LOWER('pgt_sls_billing_hdr_stg_log');

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT = 0 THEN .GOTO skip_log_drop;
.GOTO skip_log_drop;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  drop table ACQ_P_UTIL.pgt_sls_billing_hdr_stg_log;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .label skip_log_drop;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We need to drop an error table table if necessary
  --
  select 1 from dbc.tablesv 
  where 
    LOWER(databasename) = LOWER('ACQ_P_UTIL') and
    LOWER(tablename) = LOWER('pgt_sls_billing_hdr_stg_et');

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT = 0 THEN .GOTO skip_et_drop;
.GOTO skip_et_drop;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  drop table ACQ_P_UTIL.pgt_sls_billing_hdr_stg_et;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .label skip_et_drop;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- We need to drop an error table table if necessary
  --
  select 1 from dbc.tablesv 
  where 
    LOWER(databasename) = LOWER('ACQ_P_UTIL') and
    LOWER(tablename) = LOWER('pgt_sls_billing_hdr_stg_uv');

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT = 0 THEN .GOTO skip_uv_drop;
.GOTO skip_uv_drop;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  drop table ACQ_P_UTIL.pgt_sls_billing_hdr_stg_uv;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .label skip_uv_drop;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- We need to delete the stage table
  --
  delete from ACQ_P_STAGE.pgt_sls_billing_hdr_stg;

 *** Delete completed. 35355 rows removed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
Executing tpt_run task
Teradata Parallel Transporter Version 16.20.00.27 64-Bit
The local configuration file '/home/daadm1/.twbcfg.ini' is used.
   Log Directory: /etlapps/prds2/acq/stg/TptLogs
   Checkpoint Directory: /opt/teradata/client/14.10/tbuild/checkpoint

Job log: /etlapps/prds2/acq/stg/TptLogs/tbl_pgt_sls_billing_hdr_stg-2353621.out
Job id is tbl_pgt_sls_billing_hdr_stg-2353621, running on peplap00726
Teradata Parallel Transporter DataConnector Operator Version 16.20.00.27
OPPRO_pgt_sls_billing_hdr_stg[1]: Instance 1 directing private log report to 'file_log-1'.
Teradata Parallel Transporter Update Operator Version 16.20.00.27
OPLO_pgt_sls_billing_hdr_stg: private log specified: load_log
OPPRO_pgt_sls_billing_hdr_stg[1]: DataConnector Producer operator Instances: 1
OPPRO_pgt_sls_billing_hdr_stg[1]: ECI operator ID: 'OPPRO_pgt_sls_billing_hdr_stg-21707'
OPPRO_pgt_sls_billing_hdr_stg[1]: Operator instance 1 processing file '/etlapps/prds2/acq/stg/SrcFiles/ACQ_PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt'.
OPLO_pgt_sls_billing_hdr_stg: connecting sessions
OPLO_pgt_sls_billing_hdr_stg: preparing target table(s)
OPLO_pgt_sls_billing_hdr_stg: entering DML Phase
OPLO_pgt_sls_billing_hdr_stg: entering Acquisition Phase
OPLO_pgt_sls_billing_hdr_stg: entering Application Phase
OPLO_pgt_sls_billing_hdr_stg: Statistics for Target Table:  'ACQ_P_STAGE.pgt_sls_billing_hdr_stg'
OPLO_pgt_sls_billing_hdr_stg: Rows Inserted: 126575
OPLO_pgt_sls_billing_hdr_stg: Rows Updated:  0
OPLO_pgt_sls_billing_hdr_stg: Rows Deleted:  0
OPLO_pgt_sls_billing_hdr_stg: entering Cleanup Phase
OPLO_pgt_sls_billing_hdr_stg: Error Table Statistics for Target Table :   'ACQ_P_STAGE.pgt_sls_billing_hdr_stg'
OPLO_pgt_sls_billing_hdr_stg: Total Rows in Error Table 1:   0
OPLO_pgt_sls_billing_hdr_stg: Total Rows in Error Table 2:   0
OPLO_pgt_sls_billing_hdr_stg: disconnecting sessions
OPPRO_pgt_sls_billing_hdr_stg[1]: Total files processed: 1.
OPPRO_pgt_sls_billing_hdr_stg[1]: TPT19229 0 error rows sent to error file /etlapps/prds2/acq/stg/SrcFiles/pgt_sls_billing_hdr_stg_rej_records.err
OPLO_pgt_sls_billing_hdr_stg: Performance metrics:
OPLO_pgt_sls_billing_hdr_stg:     MB/sec in Acquisition phase: 4.225
OPLO_pgt_sls_billing_hdr_stg:     Elapsed time from start to Acquisition phase:   23 second(s)
OPLO_pgt_sls_billing_hdr_stg:     Elapsed time in Acquisition phase:   13 second(s)
OPLO_pgt_sls_billing_hdr_stg:     Elapsed time in Application phase: < 1 second
OPLO_pgt_sls_billing_hdr_stg:     Elapsed time from Application phase to end:   4 second(s)
OPLO_pgt_sls_billing_hdr_stg: Total processor time used = '0.228014 Second(s)'
OPLO_pgt_sls_billing_hdr_stg: Start : Thu Aug  7 22:18:31 2025
OPLO_pgt_sls_billing_hdr_stg: End   : Thu Aug  7 22:19:11 2025
Job step LOAD_STEP completed successfully
Job tbl_pgt_sls_billing_hdr_stg completed successfully
Job start: Thu Aug  7 22:18:31 2025
Job end:   Thu Aug  7 22:19:11 2025
Executing tpt_post task
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:19:12 2025 PID: 26269
 
+---------+---------+---------+---------+---------+---------+---------+----

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 15 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SET QUERY_BAND = 'ltype=acq;ltask=post_upload;ltbl=pgt_sls_billing_hdr;' FOR SESSION;

 *** Set QUERY_BAND accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:19:27-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- We need to copy the ET errors into permament tables.
  --
  select 1 from dbc.tablesv 
  where 
    LOWER(databasename) = LOWER('ACQ_P_UTIL') and
    LOWER(tablename) = LOWER('pgt_sls_billing_hdr_stg_et');

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT = 0 THEN .GOTO skip_et_manage;
.GOTO skip_et_manage;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  insert into ACQ_P_JOB.pgt_sls_billing_hdr_err2 
  (
    dw_step_id,
    dw_btch_id,
    ErrorCode,
    ErrorFieldName,
    DataParcel
  )
  select 
    this_step.mystep_id,
    this_step.mybtch_id,
    stg.ErrorCode,
    stg.ErrorField,
    stg.HostData
  from ACQ_P_UTIL.pgt_sls_billing_hdr_stg_et as stg
  left outer join
  (
    select max(actvty.cur_btch_id) as mybtch_id, max(step.step_id) as mystep_id
    from PEPCMN_P.step
    inner join PEPCMN_P.actvty
      on actvty.actvty_id = step.actvty_id
    inner join PEPCMN_P.sys
      on sys.sys_nm = actvty.sys_nm
    where
      sys.sys_nm = 'ACQ' and
      actvty_nm = 'PGT_SLS_BILLING_HDR' and
      step_nm = 'PGT_SLS_BILLING_HDR_LOAD'
  ) this_step on 1=1;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  delete ACQ_P_JOB.pgt_sls_billing_hdr_err2
  where dw_last_updt_dt < (DATE - 30);
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .export report file /etlapps/prds2/acq/sales/tmp/PGT_SLS_BILLING_HDR_PGT_SLS_BILLING_HDR_LOAD_upld1.stat;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  select count(*) (TITLE '')
  from ACQ_P_UTIL.pgt_sls_billing_hdr_stg_et;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .export reset;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .label skip_et_manage;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


 .import vartext ',' File=/etlapps/prds2/acq/stg/SrcFiles/pgt_sls_billing_hdr_stg_rej_records.err;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
 .REPEAT 500;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
 USING F1 (Varbyte(63500))
 
 insert into ACQ_P_JOB.pgt_sls_billing_hdr_err2
 (
  dw_step_id,
  dw_btch_id,
  ErrorCode,
  ErrorFieldName,
  DataParcel
 )
 select 
  this_step.mystep_id,
  this_step.mybtch_id,
  Null,
  'TPT_Reject',
  :F1
 from (
  select max(actvty.cur_btch_id) as mybtch_id, max(step.step_id) as mystep_id
  from PEPCMN_P.step
  inner join PEPCMN_P.actvty
    on actvty.actvty_id = step.actvty_id
  inner join PEPCMN_P.sys
    on sys.sys_nm = actvty.sys_nm
  where
    sys.sys_nm = 'ACQ' and
    actvty_nm = 'PGT_SLS_BILLING_HDR' and
    step_nm = 'PGT_SLS_BILLING_HDR_LOAD'
 ) this_step ;
 *** Starting at Thu Aug  7 22:19:27 2025
 
 *** Warning: Out of data. 
 *** Finished at Thu Aug  7 22:19:27 2025
 
 *** Total elapsed time was 1 second.
 
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  
    .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We need to copy the UV errors into permament tables.
  -- In reality, the UV errors should never exist though (if it did, t was issue with DDL).
  --
  select 1 from dbc.tablesv 
  where 
    LOWER(databasename) = LOWER('ACQ_P_UTIL') and
    LOWER(tablename) = LOWER('pgt_sls_billing_hdr_stg_uv');

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT = 0 THEN .GOTO skip_uv_manage;
.GOTO skip_uv_manage;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We will place error events into the error table.
  insert into ACQ_P_JOB.pgt_sls_billing_hdr_err
  (
    dw_step_id,
    dw_btch_id,
    mandt,
    acq_pgt_sys_id,
    acq_mdm_sys_id,
    blg_doc_dt,
    blg_doc_id,
    co_cdv,
    dstrbtn_chnl_cdv,
    rfrnc_doc_id,
    blg_typ_cdv,
    exch_rt_amt,
    cust_id,
    ship_to_cust_id,
    rec_crtd_dtm,
    pstng_dtm,
    blg_grss_amt,
    blg_grss_frgnccy_amt,
    blg_tot_dscnt_amt,
    blg_tot_dscnt_frgnccy_amt,
    blg_tot_prmtn_amt,
    blg_tot_prmtn_frgnccy_amt,
    blg_net_tot_amt,
    blg_net_tot_frgnccy_amt,
    locl_crncy_cdv,
    frgnccy_cdv,
    sls_loc_id,
    blg_doc_stts_cdv,
    ordr_id,
    ordr_crt_dt,
    rfrnc_fscl_doc_num_val,
    crtd_by_id,
    crtd_dt,
    zsysid,
    zdel_ind,
    ztimestamp,
    zlsch,
    zterm,
    rfbsk,
    land1,
    bstnk_vf,
    vbtyp,
    fktyp,
    mwsbk,
    j_1afitp,
    aedat,
    bzirk,
    kdgrp,
    stwae,
    sfakn,
    ktopl,
    posid,
    fksto,
    kzwi1,
    kzwi2,
    kzwi3,
    kzwi4,
    kzwi5,
    kzwi6,
    netwr,
    vkorg,
    spart,
    dw_rownum,
    vf_status,
    clrst,
    rplnr
  )
  select 
    this_step.mystep_id,
    this_step.mybtch_id,
    stg.mandt,
    stg.acq_pgt_sys_id,
    stg.acq_mdm_sys_id,
    stg.blg_doc_dt,
    stg.blg_doc_id,
    stg.co_cdv,
    stg.dstrbtn_chnl_cdv,
    stg.rfrnc_doc_id,
    stg.blg_typ_cdv,
    stg.exch_rt_amt,
    stg.cust_id,
    stg.ship_to_cust_id,
    stg.rec_crtd_dtm,
    stg.pstng_dtm,
    stg.blg_grss_amt,
    stg.blg_grss_frgnccy_amt,
    stg.blg_tot_dscnt_amt,
    stg.blg_tot_dscnt_frgnccy_amt,
    stg.blg_tot_prmtn_amt,
    stg.blg_tot_prmtn_frgnccy_amt,
    stg.blg_net_tot_amt,
    stg.blg_net_tot_frgnccy_amt,
    stg.locl_crncy_cdv,
    stg.frgnccy_cdv,
    stg.sls_loc_id,
    stg.blg_doc_stts_cdv,
    stg.ordr_id,
    stg.ordr_crt_dt,
    stg.rfrnc_fscl_doc_num_val,
    stg.crtd_by_id,
    stg.crtd_dt,
    stg.zsysid,
    stg.zdel_ind,
    stg.ztimestamp,
    stg.zlsch,
    stg.zterm,
    stg.rfbsk,
    stg.land1,
    stg.bstnk_vf,
    stg.vbtyp,
    stg.fktyp,
    stg.mwsbk,
    stg.j_1afitp,
    stg.aedat,
    stg.bzirk,
    stg.kdgrp,
    stg.stwae,
    stg.sfakn,
    stg.ktopl,
    stg.posid,
    stg.fksto,
    stg.kzwi1,
    stg.kzwi2,
    stg.kzwi3,
    stg.kzwi4,
    stg.kzwi5,
    stg.kzwi6,
    stg.netwr,
    stg.vkorg,
    stg.spart,
    stg.dw_rownum,
    stg.vf_status,
    stg.clrst,
    stg.rplnr
  from ACQ_P_UTIL.pgt_sls_billing_hdr_stg_uv as stg
  left outer join
  (
    select max(actvty.cur_btch_id) as mybtch_id, max(step.step_id) as mystep_id
    from PEPCMN_P.step
    inner join PEPCMN_P.actvty
      on actvty.actvty_id = step.actvty_id
    inner join PEPCMN_P.sys
      on sys.sys_nm = actvty.sys_nm
    where
      sys.sys_nm = 'ACQ' and
      actvty_nm = 'PGT_SLS_BILLING_HDR' and
      step_nm = 'PGT_SLS_BILLING_HDR_LOAD'
  ) this_step on 1=1;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- Commented out because in reality we should not be creating errors via this table
  -- delete ACQ_P_JOB.pgt_sls_billing_hdr_err
  -- where dw_last_updt_dt < (DATE - 30);
  -- .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;

  .export report file /etlapps/prds2/acq/sales/tmp/PGT_SLS_BILLING_HDR_PGT_SLS_BILLING_HDR_LOAD_upld2.stat;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  select count(*) (TITLE '')
  from ACQ_P_UTIL.pgt_sls_billing_hdr_stg_uv;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .export reset;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .label skip_uv_manage;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
ET=0, UV=0
SENT=0, APPLIED=0, DUP=0
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:19:28 2025 PID: 27712
 
+---------+---------+---------+---------+---------+---------+---------+----
        .set titledashes off;
+---------+---------+---------+---------+---------+---------+---------+----
        .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 20 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
        .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

        .set width 4500
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
        .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

        insert into PEPCMN_P_DATA.UPLD_STATCS
            (STEP_ID, BTCH_ID, STG_TBL, 
             UV_ERR_TOT, ET_ERR_TOT, TPT_SNT_TO_DBMS_TOT,
             TPT_APLD_TOT, TPT_PTNTL_DUP_TOT)
        select
          STEP_ID,
          CUR_BTCH_ID,
          'pgt_sls_billing_hdr_stg',
          0,
          0,
          0,
          0,
          0
 from
   PEPCMN_P.ACTVTY A
        join PEPCMN_P.STEP S
          ON A.ACTVTY_ID=S.ACTVTY_ID
        where
   SYS_NM='ACQ'
          AND ACTVTY_NM='PGT_SLS_BILLING_HDR'
          AND STEP_NM='PGT_SLS_BILLING_HDR_LOAD';

 *** Insert completed. One row added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  
.logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
.quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
0
Executing hndl_dlta task
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:19:48 2025 PID: 29329
 
+---------+---------+---------+---------+---------+---------+---------+----
.run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 16 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
.SET TITLEDASHES OFF;
+---------+---------+---------+---------+---------+---------+---------+----


 --- Deleting the duplicate pk records and keeping the latest pk records
 
 /* Select the date/time to get it into the log file.  */
SELECT DATE,TIME;

 *** Query completed. One row found. 2 columns returned. 
 *** Total elapsed time was 1 second.

Current Date      Time
  2025-08-07  22:20:04

+---------+---------+---------+---------+---------+---------+---------+----
.SET TITLEDASHES OFF;
+---------+---------+---------+---------+---------+---------+---------+----
.SET WIDTH 200;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
   
CREATE MULTISET VOLATILE TABLE VT_PGT_SLS_BILLING_HDR_STG
 AS (
 SELECT 
    BLG_DOC_ID,
    ZSYSID,
    MANDT,
    MAX(DW_ROWNUM) AS DW_ROWNUM
 FROM 
    ACQ_P_STAGE.PGT_SLS_BILLING_HDR_STG 
 GROUP BY 1,2,3
)WITH DATA
PRIMARY INDEX(BLG_DOC_ID,ZSYSID,MANDT)
ON COMMIT PRESERVE ROWS;

 *** Table has been created. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

.IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

COLLECT STATISTICS COLUMN(BLG_DOC_ID,ZSYSID,MANDT),COLUMN(DW_ROWNUM) ON VT_PGT_SLS_BILLING_HDR_STG;

 *** Update completed. No rows changed. 
 *** Total elapsed time was 2 seconds.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

.IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

COLLECT STATISTICS COLUMN(BLG_DOC_ID,ZSYSID,MANDT),COLUMN(DW_ROWNUM) ON ACQ_P_STAGE.PGT_SLS_BILLING_HDR_STG;

 *** Update completed. 3 rows changed. 
 *** Total elapsed time was 2 seconds.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

.IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

DELETE STG
    FROM ACQ_P_STAGE.PGT_SLS_BILLING_HDR_STG STG, VT_PGT_SLS_BILLING_HDR_STG VT
WHERE
    STG.BLG_DOC_ID=VT.BLG_DOC_ID
    AND STG.ZSYSID=VT.ZSYSID
    AND STG.MANDT=VT.MANDT
    AND STG.DW_ROWNUM <> VT.DW_ROWNUM;

 *** Delete completed. No rows removed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

.IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

SELECT DATE,TIME;

 *** Query completed. One row found. 2 columns returned. 
 *** Total elapsed time was 1 second.

Current Date      Time
  2025-08-07  22:20:08

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

.export reset;
 *** Output returned to console.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
.logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
.quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Executing prestage task
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:20:08 2025 PID: 2335
 
+---------+---------+---------+---------+---------+---------+---------+----

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 10 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SET QUERY_BAND = 'ltype=acq;ltask=validate;ltbl=pgt_sls_billing_item;' FOR SESSION;

 *** Set QUERY_BAND accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:20:18-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- Updating ACQ_PGT_SYS_ID,ACQ_MDM_SYS_ID columns by lookup on MINP_PGT_S4_MDG_SYS_ID_XREF table.
  
UPDATE
ACQ_P_STAGE.PGT_SLS_BILLING_HDR_STG
FROM ACQ_P_ULOAD.MINP_PGT_S4_MDG_SYS_ID_XREF AS XREF
SET ACQ_PGT_SYS_ID = XREF.MDG_SYS_ID, 
    ACQ_MDM_SYS_ID = XREF.MDM_SYS_ID

WHERE
    MANDT          = XREF.CLIENT_ID 
AND ZSYSID         = XREF.S4_SYS_ID
;

 *** Update completed. 126575 rows changed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .export reset
 *** Output returned to console.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
Executing validation task
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:20:19 2025 PID: 3276
 
+---------+---------+---------+---------+---------+---------+---------+----

  -- Cleaning is required.  A copy of the stage table should exist in the WORK database.
  -- Cleaning is required
  --       when CRIT errors can cause records to be deleted, 
  --       when defaults can be assigned in place of nulls,
  --       when duplicate records causes records to be deleted

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 1 second.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SET QUERY_BAND = 'ltype=acq;ltask=validate;ltbl=pgt_sls_billing_hdr;' FOR SESSION;

 *** Set QUERY_BAND accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:20:19-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  --If we fail here, it means we did not expect an empty stage table.
  --select top 1 * from ACQ_P_STAGE.pgt_sls_billing_hdr_stg;
  --.IF ACTIVITYCOUNT = 0 THEN .QUIT 102;

  -- Create volatile table to capture data error events.
  CREATE MULTISET VOLATILE TABLE MYDAT_ERR_EVNT, 
     NO FALLBACK,
     CHECKSUM = DEFAULT,
     NO LOG
     (
      blg_doc_id varchar(10) character set unicode  ,
      mandt varchar(3) character set unicode  ,
      zsysid varchar(8) character set unicode  ,
      ERR_CD VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC NOT NULL,
      OPTNL_RCRD_NM VARCHAR(200) CHARACTER SET UNICODE NOT CASESPECIFIC,
      OPTNL_RCRD_ID VARCHAR(1000) CHARACTER SET UNICODE NOT CASESPECIFIC,
      OPTNL_FLD_NM VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      OPTNL_FLD_VAL VARCHAR(4000) CHARACTER SET UNICODE NOT CASESPECIFIC,
      ERR_SVRTY VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      ERR_DTL_1 VARCHAR(4000) CHARACTER SET UNICODE NOT CASESPECIFIC,
      ERR_DTL_2 VARCHAR(4000) CHARACTER SET UNICODE NOT CASESPECIFIC
     )
  PRIMARY INDEX ( blg_doc_id, mandt, zsysid )
  ON COMMIT PRESERVE ROWS;

 *** Table has been created. 
 *** Warning: 6900 FallBackSetting is ALWAYS FALLBACK - MYDAT_ERR_EVNT is set to FAL
LBACK.
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-




  -- We execute a null check validation for pk field blg_doc_id
  insert into MYDAT_ERR_EVNT 
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select 
    tbl.blg_doc_id,
    tbl.mandt,
    tbl.zsysid,
    'FLD_NULL',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    'blg_doc_id',
    blg_doc_id,
    'CRIT',
    'pgt_sls_billing_hdr_stg',
    null
  from ACQ_P_STAGE.pgt_sls_billing_hdr_stg as tbl where blg_doc_id is null;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- We execute a null check validation for pk field mandt
  insert into MYDAT_ERR_EVNT 
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select 
    tbl.blg_doc_id,
    tbl.mandt,
    tbl.zsysid,
    'FLD_NULL',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    'mandt',
    mandt,
    'CRIT',
    'pgt_sls_billing_hdr_stg',
    null
  from ACQ_P_STAGE.pgt_sls_billing_hdr_stg as tbl where mandt is null;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- We execute a null check validation for pk field zsysid
  insert into MYDAT_ERR_EVNT 
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select 
    tbl.blg_doc_id,
    tbl.mandt,
    tbl.zsysid,
    'FLD_NULL',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    'zsysid',
    zsysid,
    'CRIT',
    'pgt_sls_billing_hdr_stg',
    null
  from ACQ_P_STAGE.pgt_sls_billing_hdr_stg as tbl where zsysid is null;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-






  -- We execute a null check validation for field acq_mdm_sys_id
  insert into MYDAT_ERR_EVNT 
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select 
    tbl.blg_doc_id,
    tbl.mandt,
    tbl.zsysid,
    'FLD_NULL',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    'acq_mdm_sys_id',
    acq_mdm_sys_id,
    'CRIT',
    'pgt_sls_billing_hdr_stg',
    null
  from ACQ_P_STAGE.pgt_sls_billing_hdr_stg as tbl where acq_mdm_sys_id is null
  ;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- We execute a null check validation for field acq_pgt_sys_id
  insert into MYDAT_ERR_EVNT 
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select 
    tbl.blg_doc_id,
    tbl.mandt,
    tbl.zsysid,
    'FLD_NULL',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    'acq_pgt_sys_id',
    acq_pgt_sys_id,
    'CRIT',
    'pgt_sls_billing_hdr_stg',
    null
  from ACQ_P_STAGE.pgt_sls_billing_hdr_stg as tbl where acq_pgt_sys_id is null
  ;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-






  -- We execute the duplicate record validation for all applicable columns
  insert into MYDAT_ERR_EVNT
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select
    tbl.blg_doc_id,
    tbl.mandt,
    tbl.zsysid,
    'RCD_DUPLICATE',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    'all',
    'all',
    'WARN',
    'pgt_sls_billing_hdr_stg',
    null
    from 
  (select 
    acq_mdm_sys_id,
    acq_pgt_sys_id,
    aedat,
    blg_doc_dt,
    blg_doc_id,
    blg_doc_stts_cdv,
    blg_grss_amt,
    blg_grss_frgnccy_amt,
    blg_net_tot_amt,
    blg_net_tot_frgnccy_amt,
    blg_tot_dscnt_amt,
    blg_tot_dscnt_frgnccy_amt,
    blg_tot_prmtn_amt,
    blg_tot_prmtn_frgnccy_amt,
    blg_typ_cdv,
    bstnk_vf,
    bzirk,
    co_cdv,
    clrst,
    crtd_by_id,
    crtd_dt,
    cust_id,
    dstrbtn_chnl_cdv,
    dw_rownum,
    exch_rt_amt,
    fksto,
    fktyp,
    frgnccy_cdv,
    j_1afitp,
    kdgrp,
    ktopl,
    kzwi1,
    kzwi2,
    kzwi3,
    kzwi4,
    kzwi5,
    kzwi6,
    land1,
    locl_crncy_cdv,
    mandt,
    mwsbk,
    netwr,
    ordr_crt_dt,
    ordr_id,
    posid,
    pstng_dtm,
    rec_crtd_dtm,
    rfbsk,
    rfrnc_doc_id,
    rfrnc_fscl_doc_num_val,
    rplnr,
    sfakn,
    ship_to_cust_id,
    sls_loc_id,
    stwae,
    spart,
    vbtyp,
    vf_status,
    vkorg,
    zdel_ind,
    zlsch,
    zsysid,
    zterm,
    ztimestamp
  from ACQ_P_STAGE.pgt_sls_billing_hdr_stg
  group by 
    acq_mdm_sys_id,
    acq_pgt_sys_id,
    aedat,
    blg_doc_dt,
    blg_doc_id,
    blg_doc_stts_cdv,
    blg_grss_amt,
    blg_grss_frgnccy_amt,
    blg_net_tot_amt,
    blg_net_tot_frgnccy_amt,
    blg_tot_dscnt_amt,
    blg_tot_dscnt_frgnccy_amt,
    blg_tot_prmtn_amt,
    blg_tot_prmtn_frgnccy_amt,
    blg_typ_cdv,
    bstnk_vf,
    bzirk,
    co_cdv,
    clrst,
    crtd_by_id,
    crtd_dt,
    cust_id,
    dstrbtn_chnl_cdv,
    dw_rownum,
    exch_rt_amt,
    fksto,
    fktyp,
    frgnccy_cdv,
    j_1afitp,
    kdgrp,
    ktopl,
    kzwi1,
    kzwi2,
    kzwi3,
    kzwi4,
    kzwi5,
    kzwi6,
    land1,
    locl_crncy_cdv,
    mandt,
    mwsbk,
    netwr,
    ordr_crt_dt,
    ordr_id,
    posid,
    pstng_dtm,
    rec_crtd_dtm,
    rfbsk,
    rfrnc_doc_id,
    rfrnc_fscl_doc_num_val,
    rplnr,
    sfakn,
    ship_to_cust_id,
    sls_loc_id,
    stwae,
    spart,
    vbtyp,
    vf_status,
    vkorg,
    zdel_ind,
    zlsch,
    zsysid,
    zterm,
    ztimestamp
  having count(*) > 1
  ) tbl;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-






  -- We execute the duplicate pk validation for pk columns (excluding duplicate records)
  insert into MYDAT_ERR_EVNT
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select
    tbl.blg_doc_id,
    tbl.mandt,
    tbl.zsysid,
    'RCD_PK_DUPLICATE',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    'all',
    'all',
    'CRIT',
    'pgt_sls_billing_hdr_stg',
    null
  from 
  (select 
    blg_doc_id,
    mandt,
    zsysid
  from 
  (select
    acq_mdm_sys_id,
    acq_pgt_sys_id,
    aedat,
    blg_doc_dt,
    blg_doc_id,
    blg_doc_stts_cdv,
    blg_grss_amt,
    blg_grss_frgnccy_amt,
    blg_net_tot_amt,
    blg_net_tot_frgnccy_amt,
    blg_tot_dscnt_amt,
    blg_tot_dscnt_frgnccy_amt,
    blg_tot_prmtn_amt,
    blg_tot_prmtn_frgnccy_amt,
    blg_typ_cdv,
    bstnk_vf,
    bzirk,
    co_cdv,
    clrst,
    crtd_by_id,
    crtd_dt,
    cust_id,
    dstrbtn_chnl_cdv,
    dw_rownum,
    exch_rt_amt,
    fksto,
    fktyp,
    frgnccy_cdv,
    j_1afitp,
    kdgrp,
    ktopl,
    kzwi1,
    kzwi2,
    kzwi3,
    kzwi4,
    kzwi5,
    kzwi6,
    land1,
    locl_crncy_cdv,
    mandt,
    mwsbk,
    netwr,
    ordr_crt_dt,
    ordr_id,
    posid,
    pstng_dtm,
    rec_crtd_dtm,
    rfbsk,
    rfrnc_doc_id,
    rfrnc_fscl_doc_num_val,
    rplnr,
    sfakn,
    ship_to_cust_id,
    sls_loc_id,
    stwae,
    spart,
    vbtyp,
    vf_status,
    vkorg,
    zdel_ind,
    zlsch,
    zsysid,
    zterm,
    ztimestamp
  from ACQ_P_STAGE.pgt_sls_billing_hdr_stg
  group by
    acq_mdm_sys_id,
    acq_pgt_sys_id,
    aedat,
    blg_doc_dt,
    blg_doc_id,
    blg_doc_stts_cdv,
    blg_grss_amt,
    blg_grss_frgnccy_amt,
    blg_net_tot_amt,
    blg_net_tot_frgnccy_amt,
    blg_tot_dscnt_amt,
    blg_tot_dscnt_frgnccy_amt,
    blg_tot_prmtn_amt,
    blg_tot_prmtn_frgnccy_amt,
    blg_typ_cdv,
    bstnk_vf,
    bzirk,
    co_cdv,
    clrst,
    crtd_by_id,
    crtd_dt,
    cust_id,
    dstrbtn_chnl_cdv,
    dw_rownum,
    exch_rt_amt,
    fksto,
    fktyp,
    frgnccy_cdv,
    j_1afitp,
    kdgrp,
    ktopl,
    kzwi1,
    kzwi2,
    kzwi3,
    kzwi4,
    kzwi5,
    kzwi6,
    land1,
    locl_crncy_cdv,
    mandt,
    mwsbk,
    netwr,
    ordr_crt_dt,
    ordr_id,
    posid,
    pstng_dtm,
    rec_crtd_dtm,
    rfbsk,
    rfrnc_doc_id,
    rfrnc_fscl_doc_num_val,
    rplnr,
    sfakn,
    ship_to_cust_id,
    sls_loc_id,
    stwae,
    spart,
    vbtyp,
    vf_status,
    vkorg,
    zdel_ind,
    zlsch,
    zsysid,
    zterm,
    ztimestamp) tbl2
  group by 
    blg_doc_id,
    mandt,
    zsysid
  having count(*) > 1
  ) tbl;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-




  -- We move the data from the staging to the clean area (all cleaning is done in one move)
  --   NOTE:  When we de-dupe records, we only manage those columns
  --

  -- Then, we delete the clean table for this new run
  delete from ACQ_P_WORK.pgt_sls_billing_hdr_stg_cln;

 *** Delete completed. 35355 rows removed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- Then, we do the move of the data rejecting records that should be while setting defaults.
  insert into ACQ_P_WORK.pgt_sls_billing_hdr_stg_cln
  (



    acq_mdm_sys_id,
    acq_pgt_sys_id,
    aedat,
    blg_doc_dt,
    blg_doc_id,
    blg_doc_stts_cdv,
    blg_grss_amt,
    blg_grss_frgnccy_amt,
    blg_net_tot_amt,
    blg_net_tot_frgnccy_amt,
    blg_tot_dscnt_amt,
    blg_tot_dscnt_frgnccy_amt,
    blg_tot_prmtn_amt,
    blg_tot_prmtn_frgnccy_amt,
    blg_typ_cdv,
    bstnk_vf,
    bzirk,
    co_cdv,
    clrst,
    crtd_by_id,
    crtd_dt,
    cust_id,
    dstrbtn_chnl_cdv,
    dw_rownum,
    exch_rt_amt,
    fksto,
    fktyp,
    frgnccy_cdv,
    j_1afitp,
    kdgrp,
    ktopl,
    kzwi1,
    kzwi2,
    kzwi3,
    kzwi4,
    kzwi5,
    kzwi6,
    land1,
    locl_crncy_cdv,
    mandt,
    mwsbk,
    netwr,
    ordr_crt_dt,
    ordr_id,
    posid,
    pstng_dtm,
    rec_crtd_dtm,
    rfbsk,
    rfrnc_doc_id,
    rfrnc_fscl_doc_num_val,
    rplnr,
    sfakn,
    ship_to_cust_id,
    sls_loc_id,
    stwae,
    spart,
    vbtyp,
    vf_status,
    vkorg,
    zdel_ind,
    zlsch,
    zsysid,
    zterm,
    ztimestamp

  )
  select



    tbl.acq_mdm_sys_id,
    tbl.acq_pgt_sys_id,
    tbl.aedat,
    tbl.blg_doc_dt,
    tbl.blg_doc_id,
    tbl.blg_doc_stts_cdv,
    tbl.blg_grss_amt,
    tbl.blg_grss_frgnccy_amt,
    tbl.blg_net_tot_amt,
    tbl.blg_net_tot_frgnccy_amt,
    tbl.blg_tot_dscnt_amt,
    tbl.blg_tot_dscnt_frgnccy_amt,
    tbl.blg_tot_prmtn_amt,
    tbl.blg_tot_prmtn_frgnccy_amt,
    tbl.blg_typ_cdv,
    tbl.bstnk_vf,
    tbl.bzirk,
    tbl.co_cdv,
    tbl.clrst,
    tbl.crtd_by_id,
    tbl.crtd_dt,
    tbl.cust_id,
    tbl.dstrbtn_chnl_cdv,
    tbl.dw_rownum,
    tbl.exch_rt_amt,
    tbl.fksto,
    tbl.fktyp,
    tbl.frgnccy_cdv,
    tbl.j_1afitp,
    tbl.kdgrp,
    tbl.ktopl,
    tbl.kzwi1,
    tbl.kzwi2,
    tbl.kzwi3,
    tbl.kzwi4,
    tbl.kzwi5,
    tbl.kzwi6,
    tbl.land1,
    tbl.locl_crncy_cdv,
    tbl.mandt,
    tbl.mwsbk,
    tbl.netwr,
    tbl.ordr_crt_dt,
    tbl.ordr_id,
    tbl.posid,
    tbl.pstng_dtm,
    tbl.rec_crtd_dtm,
    tbl.rfbsk,
    tbl.rfrnc_doc_id,
    tbl.rfrnc_fscl_doc_num_val,
    tbl.rplnr,
    tbl.sfakn,
    tbl.ship_to_cust_id,
    tbl.sls_loc_id,
    tbl.stwae,
    tbl.spart,
    tbl.vbtyp,
    tbl.vf_status,
    tbl.vkorg,
    tbl.zdel_ind,
    tbl.zlsch,
    tbl.zsysid,
    tbl.zterm,
    tbl.ztimestamp

  from
    (
    select 
        acq_mdm_sys_id,
       acq_pgt_sys_id,
       aedat,
       blg_doc_dt,
       blg_doc_id,
       blg_doc_stts_cdv,
       blg_grss_amt,
       blg_grss_frgnccy_amt,
       blg_net_tot_amt,
       blg_net_tot_frgnccy_amt,
       blg_tot_dscnt_amt,
       blg_tot_dscnt_frgnccy_amt,
       blg_tot_prmtn_amt,
       blg_tot_prmtn_frgnccy_amt,
       blg_typ_cdv,
       bstnk_vf,
       bzirk,
       co_cdv,
       clrst,
       crtd_by_id,
       crtd_dt,
       cust_id,
       dstrbtn_chnl_cdv,
       dw_rownum,
       exch_rt_amt,
       fksto,
       fktyp,
       frgnccy_cdv,
       j_1afitp,
       kdgrp,
       ktopl,
       kzwi1,
       kzwi2,
       kzwi3,
       kzwi4,
       kzwi5,
       kzwi6,
       land1,
       locl_crncy_cdv,
       mandt,
       mwsbk,
       netwr,
       ordr_crt_dt,
       ordr_id,
       posid,
       pstng_dtm,
       rec_crtd_dtm,
       rfbsk,
       rfrnc_doc_id,
       rfrnc_fscl_doc_num_val,
       rplnr,
       sfakn,
       ship_to_cust_id,
       sls_loc_id,
       stwae,
       spart,
       vbtyp,
       vf_status,
       vkorg,
       zdel_ind,
       zlsch,
       zsysid,
       zterm,
       ztimestamp
    from ACQ_P_STAGE.pgt_sls_billing_hdr_stg
    group by 
       acq_mdm_sys_id,
       acq_pgt_sys_id,
       aedat,
       blg_doc_dt,
       blg_doc_id,
       blg_doc_stts_cdv,
       blg_grss_amt,
       blg_grss_frgnccy_amt,
       blg_net_tot_amt,
       blg_net_tot_frgnccy_amt,
       blg_tot_dscnt_amt,
       blg_tot_dscnt_frgnccy_amt,
       blg_tot_prmtn_amt,
       blg_tot_prmtn_frgnccy_amt,
       blg_typ_cdv,
       bstnk_vf,
       bzirk,
       co_cdv,
       clrst,
       crtd_by_id,
       crtd_dt,
       cust_id,
       dstrbtn_chnl_cdv,
       dw_rownum,
       exch_rt_amt,
       fksto,
       fktyp,
       frgnccy_cdv,
       j_1afitp,
       kdgrp,
       ktopl,
       kzwi1,
       kzwi2,
       kzwi3,
       kzwi4,
       kzwi5,
       kzwi6,
       land1,
       locl_crncy_cdv,
       mandt,
       mwsbk,
       netwr,
       ordr_crt_dt,
       ordr_id,
       posid,
       pstng_dtm,
       rec_crtd_dtm,
       rfbsk,
       rfrnc_doc_id,
       rfrnc_fscl_doc_num_val,
       rplnr,
       sfakn,
       ship_to_cust_id,
       sls_loc_id,
       stwae,
       spart,
       vbtyp,
       vf_status,
       vkorg,
       zdel_ind,
       zlsch,
       zsysid,
       zterm,
       ztimestamp
    ) as tbl


  left outer join (select distinct blg_doc_id, mandt, zsysid, ERR_SVRTY from MYDAT_ERR_EVNT) errtbl
    on 
      -- We have this in on condition because we filter out NON-CRIT ERRORS within the outer join
      errtbl.ERR_SVRTY = 'CRIT' and
      coalesce(cast(errtbl.blg_doc_id as VARCHAR(40)),'~MEM~PEP~') = coalesce(cast(tbl.blg_doc_id as VARCHAR(40)),'~MEM~PEP~') and
      coalesce(cast(errtbl.mandt as VARCHAR(12)),'~MEM~PEP~') = coalesce(cast(tbl.mandt as VARCHAR(12)),'~MEM~PEP~') and
      coalesce(cast(errtbl.zsysid as VARCHAR(32)),'~MEM~PEP~') = coalesce(cast(tbl.zsysid as VARCHAR(32)),'~MEM~PEP~')

  where errtbl.ERR_SVRTY is null;

 *** Insert completed. 126575 rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- We execute the FK surrogate key lookups (validation reporting step might be at end)
  --

  -- Then, we delete the fk table for this new run
  delete from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_CUST_ID;

 *** Delete completed. 35355 rows removed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We lock the key table to ensure no one is managing surrogate key logic at the same time.
  -- When we end the transaction, the lock will be given up.
  --
  BT;

 *** Begin transaction accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  lock table ACQ_P_DIM.gtmd_ddh_cust_core_cf_key write;

 *** Null statement accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- Then, we insert fk surrogate records into the surrogate table for records in staging
  insert into ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_CUST_ID
  (
    blg_doc_id,
    mandt,
    zsysid,
    fk_CK_CUST_ID_surr,
    fknk_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id
  )
  select distinct -- distinct in case dup pks with same fk, helps prevent early failure
    stg.blg_doc_id,
    stg.mandt,
    stg.zsysid,
    core.dw_cust_id,
    stg.cust_id,
    stg.mandt,
    stg.acq_pgt_sys_id
  from 
    ACQ_P_WORK.pgt_sls_billing_hdr_stg_cln as stg
  left outer join
    ACQ_P.gtmd_ddh_cust_core_cf_key as core
  on
    stg.cust_id = core.cust_id and
    stg.mandt = core.client_id and
    stg.acq_pgt_sys_id = core.pgt_sys_id

    and core.prmy_ind = 'Y'
  where
  (
    stg.cust_id IS NOT NULL and
    stg.mandt IS NOT NULL and
    stg.acq_pgt_sys_id IS NOT NULL
  ) 
  ;

 *** Insert completed. 126575 rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We check for duplicate fks returned.  If this occured, we just simply abort.
  -- We would prefer not to abort, but the data is just simply too corrupt to continue.
  -- This can happen for source records that have same pk but different fk.
  -- This can happen for fk lookup having multi records (so, target table pk was not unique)
  select
    blg_doc_id,
    mandt,
    zsysid
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_CUST_ID
  group by 
    blg_doc_id,
    mandt,
    zsysid
    having count(*) > 1;

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT > 0 THEN .QUIT 101; -- sorry, but had to do it
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We will create surrogate keys for missing natural keys for table ...
  -- If this fails, a re-start is OK because DAT_ERR_EVNT is set table, will not create dups
  -- After creating surrogate keys, we will update the work table with the FKs if need be
  insert into ACQ_P_DIM.gtmd_ddh_cust_core_cf_key
  (
    dw_cust_id,
    dw_sys_id,
    dw_id,
    cust_id,
    client_id,
    pgt_sys_id,
    mstr_id,
    prmy_ind,
    mssng_ind,
    del_ind
  )
  select
    (689 * 10000000000) + dw_id,
    dw_sys_id,
    dw_id,
    fknk_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    mstr_id,
    prmy_ind,
    mssng_ind,
    del_ind
  from 
  (select
    627 as dw_sys_id,
    maxpk + fk_CK_CUST_ID_rowid as dw_id,
    fknk_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    NULL as mstr_id,
    'Y' as prmy_ind,
    'Y' as mssng_ind,
    'N' as del_ind
  from
  (select
    maxpk.maxpk,
    fknk_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    ROW_NUMBER() OVER (ORDER BY fk_CK_CUST_ID_surr) as fk_CK_CUST_ID_rowid
  from (select distinct
    fknk_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    fk_CK_CUST_ID_surr
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_CUST_ID) as tbl
  cross join
  (select coalesce(max(dw_id), 0) as maxpk from ACQ_P.gtmd_ddh_cust_core_cf_key) maxpk
  where tbl.fk_CK_CUST_ID_surr is null
  ) outer_tbl) final_tbl;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We complete the transaction and give up the key lock
  --
  ET;

 *** End transaction accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- Then, we insert errors where surrogate keys are not found
  insert into MYDAT_ERR_EVNT 
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select 
    blg_doc_id,
    mandt,
    zsysid, 
    'RCD_FK_NO_REF',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    null,
    null,
    'ERR',
    'COLS: cust_id, mandt, acq_pgt_sys_id',
    'VALS: ' || tbl.fknk_cust_id || '|' || tbl.fknk_mandt || '|' || tbl.fknk_acq_pgt_sys_id
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_CUST_ID as tbl
  where fk_CK_CUST_ID_surr is null;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- If we created some surrogate key records, we need to update our work table with them
  update ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_CUST_ID
  from ACQ_P.gtmd_ddh_cust_core_cf_key
    set fk_CK_CUST_ID_surr = gtmd_ddh_cust_core_cf_key.dw_cust_id
  where
    fk_pgt_sls_billing_hdr_stg_CK_CUST_ID.fknk_cust_id = gtmd_ddh_cust_core_cf_key.cust_id and
    fk_pgt_sls_billing_hdr_stg_CK_CUST_ID.fknk_mandt = gtmd_ddh_cust_core_cf_key.client_id and
    fk_pgt_sls_billing_hdr_stg_CK_CUST_ID.fknk_acq_pgt_sys_id = gtmd_ddh_cust_core_cf_key.pgt_sys_id

    and gtmd_ddh_cust_core_cf_key.prmy_ind = 'Y'
    and fk_pgt_sls_billing_hdr_stg_CK_CUST_ID.fk_CK_CUST_ID_surr is null;

 *** Update completed. No rows changed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- We execute the FK surrogate key lookups (validation reporting step might be at end)
  --

  -- Then, we delete the fk table for this new run
  delete from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID;

 *** Delete completed. 35355 rows removed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We lock the key table to ensure no one is managing surrogate key logic at the same time.
  -- When we end the transaction, the lock will be given up.
  --
  BT;

 *** Begin transaction accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  lock table ACQ_P_DIM.gtmd_ddh_cust_core_cf_key write;

 *** Null statement accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- Then, we insert fk surrogate records into the surrogate table for records in staging
  insert into ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID
  (
    blg_doc_id,
    mandt,
    zsysid,
    fk_CK_SHIP_TO_CUST_ID_surr,
    fknk_ship_to_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id
  )
  select distinct -- distinct in case dup pks with same fk, helps prevent early failure
    stg.blg_doc_id,
    stg.mandt,
    stg.zsysid,
    core.dw_cust_id,
    stg.ship_to_cust_id,
    stg.mandt,
    stg.acq_pgt_sys_id
  from 
    ACQ_P_WORK.pgt_sls_billing_hdr_stg_cln as stg
  left outer join
    ACQ_P.gtmd_ddh_cust_core_cf_key as core
  on
    stg.ship_to_cust_id = core.cust_id and
    stg.mandt = core.client_id and
    stg.acq_pgt_sys_id = core.pgt_sys_id

    and core.prmy_ind = 'Y'
  where
  (
    stg.ship_to_cust_id IS NOT NULL and
    stg.mandt IS NOT NULL and
    stg.acq_pgt_sys_id IS NOT NULL
  ) 
  ;

 *** Insert completed. 126575 rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We check for duplicate fks returned.  If this occured, we just simply abort.
  -- We would prefer not to abort, but the data is just simply too corrupt to continue.
  -- This can happen for source records that have same pk but different fk.
  -- This can happen for fk lookup having multi records (so, target table pk was not unique)
  select
    blg_doc_id,
    mandt,
    zsysid
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID
  group by 
    blg_doc_id,
    mandt,
    zsysid
    having count(*) > 1;

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT > 0 THEN .QUIT 101; -- sorry, but had to do it
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We will create surrogate keys for missing natural keys for table ...
  -- If this fails, a re-start is OK because DAT_ERR_EVNT is set table, will not create dups
  -- After creating surrogate keys, we will update the work table with the FKs if need be
  insert into ACQ_P_DIM.gtmd_ddh_cust_core_cf_key
  (
    dw_cust_id,
    dw_sys_id,
    dw_id,
    cust_id,
    client_id,
    pgt_sys_id,
    mstr_id,
    prmy_ind,
    mssng_ind,
    del_ind
  )
  select
    (689 * 10000000000) + dw_id,
    dw_sys_id,
    dw_id,
    fknk_ship_to_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    mstr_id,
    prmy_ind,
    mssng_ind,
    del_ind
  from 
  (select
    627 as dw_sys_id,
    maxpk + fk_CK_SHIP_TO_CUST_ID_rowid as dw_id,
    fknk_ship_to_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    NULL as mstr_id,
    'Y' as prmy_ind,
    'Y' as mssng_ind,
    'N' as del_ind
  from
  (select
    maxpk.maxpk,
    fknk_ship_to_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    ROW_NUMBER() OVER (ORDER BY fk_CK_SHIP_TO_CUST_ID_surr) as fk_CK_SHIP_TO_CUST_ID_rowid
  from (select distinct
    fknk_ship_to_cust_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    fk_CK_SHIP_TO_CUST_ID_surr
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID) as tbl
  cross join
  (select coalesce(max(dw_id), 0) as maxpk from ACQ_P.gtmd_ddh_cust_core_cf_key) maxpk
  where tbl.fk_CK_SHIP_TO_CUST_ID_surr is null
  ) outer_tbl) final_tbl;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We complete the transaction and give up the key lock
  --
  ET;

 *** End transaction accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- Then, we insert errors where surrogate keys are not found
  insert into MYDAT_ERR_EVNT 
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select 
    blg_doc_id,
    mandt,
    zsysid, 
    'RCD_FK_NO_REF',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    null,
    null,
    'ERR',
    'COLS: ship_to_cust_id, mandt, acq_pgt_sys_id',
    'VALS: ' || tbl.fknk_ship_to_cust_id || '|' || tbl.fknk_mandt || '|' || tbl.fknk_acq_pgt_sys_id
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID as tbl
  where fk_CK_SHIP_TO_CUST_ID_surr is null;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- If we created some surrogate key records, we need to update our work table with them
  update ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID
  from ACQ_P.gtmd_ddh_cust_core_cf_key
    set fk_CK_SHIP_TO_CUST_ID_surr = gtmd_ddh_cust_core_cf_key.dw_cust_id
  where
    fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID.fknk_ship_to_cust_id = gtmd_ddh_cust_core_cf_key.cust_id and
    fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID.fknk_mandt = gtmd_ddh_cust_core_cf_key.client_id and
    fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID.fknk_acq_pgt_sys_id = gtmd_ddh_cust_core_cf_key.pgt_sys_id

    and gtmd_ddh_cust_core_cf_key.prmy_ind = 'Y'
    and fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID.fk_CK_SHIP_TO_CUST_ID_surr is null;

 *** Update completed. No rows changed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- We execute the FK surrogate key lookups (validation reporting step might be at end)
  --

  -- Then, we delete the fk table for this new run
  delete from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID;

 *** Delete completed. 35350 rows removed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We lock the key table to ensure no one is managing surrogate key logic at the same time.
  -- When we end the transaction, the lock will be given up.
  --
  BT;

 *** Begin transaction accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  lock table ACQ_P_DIM.gtmd_ddh_loc_core_cf_key write;

 *** Null statement accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- Then, we insert fk surrogate records into the surrogate table for records in staging
  insert into ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID
  (
    blg_doc_id,
    mandt,
    zsysid,
    fk_LK_SLS_LOC_ID_surr,
    fknk_sls_loc_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id
  )
  select distinct -- distinct in case dup pks with same fk, helps prevent early failure
    stg.blg_doc_id,
    stg.mandt,
    stg.zsysid,
    core.dw_loc_id,
    stg.sls_loc_id,
    stg.mandt,
    stg.acq_pgt_sys_id
  from 
    ACQ_P_WORK.pgt_sls_billing_hdr_stg_cln as stg
  left outer join
    ACQ_P.gtmd_ddh_loc_core_cf_key as core
  on
    stg.sls_loc_id = core.loc_id and
    stg.mandt = core.client_id and
    stg.acq_pgt_sys_id = core.pgt_sys_id

    and core.prmy_ind = 'Y'
  where
  (
    stg.sls_loc_id IS NOT NULL and
    stg.mandt IS NOT NULL and
    stg.acq_pgt_sys_id IS NOT NULL
  ) 
  ;

 *** Insert completed. 120669 rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We check for duplicate fks returned.  If this occured, we just simply abort.
  -- We would prefer not to abort, but the data is just simply too corrupt to continue.
  -- This can happen for source records that have same pk but different fk.
  -- This can happen for fk lookup having multi records (so, target table pk was not unique)
  select
    blg_doc_id,
    mandt,
    zsysid
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID
  group by 
    blg_doc_id,
    mandt,
    zsysid
    having count(*) > 1;

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT > 0 THEN .QUIT 101; -- sorry, but had to do it
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We will create surrogate keys for missing natural keys for table ...
  -- If this fails, a re-start is OK because DAT_ERR_EVNT is set table, will not create dups
  -- After creating surrogate keys, we will update the work table with the FKs if need be
  insert into ACQ_P_DIM.gtmd_ddh_loc_core_cf_key
  (
    dw_loc_id,
    dw_sys_id,
    dw_id,
    loc_id,
    client_id,
    pgt_sys_id,
    mstr_id,
    prmy_ind,
    mssng_ind,
    del_ind
  )
  select
    (692 * 10000000000) + dw_id,
    dw_sys_id,
    dw_id,
    fknk_sls_loc_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    mstr_id,
    prmy_ind,
    mssng_ind,
    del_ind
  from 
  (select
    627 as dw_sys_id,
    maxpk + fk_LK_SLS_LOC_ID_rowid as dw_id,
    fknk_sls_loc_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    NULL as mstr_id,
    'Y' as prmy_ind,
    'Y' as mssng_ind,
    'N' as del_ind
  from
  (select
    maxpk.maxpk,
    fknk_sls_loc_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    ROW_NUMBER() OVER (ORDER BY fk_LK_SLS_LOC_ID_surr) as fk_LK_SLS_LOC_ID_rowid
  from (select distinct
    fknk_sls_loc_id,
    fknk_mandt,
    fknk_acq_pgt_sys_id,
    fk_LK_SLS_LOC_ID_surr
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID) as tbl
  cross join
  (select coalesce(max(dw_id), 0) as maxpk from ACQ_P.gtmd_ddh_loc_core_cf_key) maxpk
  where tbl.fk_LK_SLS_LOC_ID_surr is null
  ) outer_tbl) final_tbl;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We complete the transaction and give up the key lock
  --
  ET;

 *** End transaction accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- Then, we insert errors where surrogate keys are not found
  insert into MYDAT_ERR_EVNT 
  (
    blg_doc_id,
    mandt,
    zsysid, 
    ERR_CD, 
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID, 
    OPTNL_FLD_NM, 
    OPTNL_FLD_VAL, 
    ERR_SVRTY, 
    ERR_DTL_1, 
    ERR_DTL_2
  )
  select 
    blg_doc_id,
    mandt,
    zsysid, 
    'RCD_FK_NO_REF',
    cast('blg_doc_id|mandt|zsysid' as VARCHAR(200)),
    cast(coalesce(cast(tbl.blg_doc_id as VARCHAR(40)), 'NULL') || '|' || coalesce(cast(tbl.mandt as VARCHAR(12)), 'NULL') || '|' || coalesce(cast(tbl.zsysid as VARCHAR(32)), 'NULL') as VARCHAR(1000)),
    
    null,
    null,
    'ERR',
    'COLS: sls_loc_id, mandt, acq_pgt_sys_id',
    'VALS: ' || tbl.fknk_sls_loc_id || '|' || tbl.fknk_mandt || '|' || tbl.fknk_acq_pgt_sys_id
  from ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID as tbl
  where fk_LK_SLS_LOC_ID_surr is null;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- If we created some surrogate key records, we need to update our work table with them
  update ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID
  from ACQ_P.gtmd_ddh_loc_core_cf_key
    set fk_LK_SLS_LOC_ID_surr = gtmd_ddh_loc_core_cf_key.dw_loc_id
  where
    fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID.fknk_sls_loc_id = gtmd_ddh_loc_core_cf_key.loc_id and
    fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID.fknk_mandt = gtmd_ddh_loc_core_cf_key.client_id and
    fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID.fknk_acq_pgt_sys_id = gtmd_ddh_loc_core_cf_key.pgt_sys_id

    and gtmd_ddh_loc_core_cf_key.prmy_ind = 'Y'
    and fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID.fk_LK_SLS_LOC_ID_surr is null;

 *** Update completed. No rows changed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We will now move data error events into the primary data error event table.
  insert into ACQ_P_JOB.dat_err_evnt 
  (
    STEP_ID,
    ERR_CD,
    BTCH_ID,
    OPTNL_RCRD_NM, 
    OPTNL_RCRD_ID,
    OPTNL_FLD_NM,
    OPTNL_FLD_VAL,
    ERR_SVRTY,
    ERR_DTL_1,
    ERR_DTL_2,
    TBL_NM
  )
  select
    step_id,
    err_cd,
    cur_btch_id as btch_id,
    optnl_rcrd_nm,
    optnl_rcrd_id,
    optnl_fld_nm,
    optnl_fld_val,
    err_svrty,
    err_dtl_1,
    err_dtl_2,
    'pgt_sls_billing_hdr_stg'
  from MYDAT_ERR_EVNT
  cross join
  (
  select max(actvty.cur_btch_id) as cur_btch_id, max(step.step_id) as step_id
  from PEPCMN_P.step
  inner join PEPCMN_P.actvty
    on actvty.actvty_id = step.actvty_id
  inner join PEPCMN_P.sys
    on sys.sys_nm = actvty.sys_nm
  where
    sys.sys_nm = 'ACQ' and
    actvty_nm = 'PGT_SLS_BILLING_HDR' and
    step_nm = 'PGT_SLS_BILLING_HDR_LOAD'
  ) this_step;

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  -- We will place error events into the error table.
  insert into ACQ_P_JOB.pgt_sls_billing_hdr_err
  (
    dw_step_id,
    dw_btch_id,
      mandt,
      acq_pgt_sys_id,
      acq_mdm_sys_id,
      blg_doc_dt,
      blg_doc_id,
      co_cdv,
      dstrbtn_chnl_cdv,
      rfrnc_doc_id,
      blg_typ_cdv,
      exch_rt_amt,
      cust_id,
      ship_to_cust_id,
      rec_crtd_dtm,
      pstng_dtm,
      blg_grss_amt,
      blg_grss_frgnccy_amt,
      blg_tot_dscnt_amt,
      blg_tot_dscnt_frgnccy_amt,
      blg_tot_prmtn_amt,
      blg_tot_prmtn_frgnccy_amt,
      blg_net_tot_amt,
      blg_net_tot_frgnccy_amt,
      locl_crncy_cdv,
      frgnccy_cdv,
      sls_loc_id,
      blg_doc_stts_cdv,
      ordr_id,
      ordr_crt_dt,
      rfrnc_fscl_doc_num_val,
      crtd_by_id,
      crtd_dt,
      zsysid,
      zdel_ind,
      ztimestamp,
      zlsch,
      zterm,
      rfbsk,
      land1,
      bstnk_vf,
      vbtyp,
      fktyp,
      mwsbk,
      j_1afitp,
      aedat,
      bzirk,
      kdgrp,
      stwae,
      sfakn,
      ktopl,
      posid,
      fksto,
      kzwi1,
      kzwi2,
      kzwi3,
      kzwi4,
      kzwi5,
      kzwi6,
      netwr,
      vkorg,
      spart,
      dw_rownum,
      vf_status,
      clrst,
      rplnr
  )
  select 
    this_step.mystep_id,
    this_step.mybtch_id,
      tbl.mandt,
      tbl.acq_pgt_sys_id,
      tbl.acq_mdm_sys_id,
      tbl.blg_doc_dt,
      tbl.blg_doc_id,
      tbl.co_cdv,
      tbl.dstrbtn_chnl_cdv,
      tbl.rfrnc_doc_id,
      tbl.blg_typ_cdv,
      tbl.exch_rt_amt,
      tbl.cust_id,
      tbl.ship_to_cust_id,
      tbl.rec_crtd_dtm,
      tbl.pstng_dtm,
      tbl.blg_grss_amt,
      tbl.blg_grss_frgnccy_amt,
      tbl.blg_tot_dscnt_amt,
      tbl.blg_tot_dscnt_frgnccy_amt,
      tbl.blg_tot_prmtn_amt,
      tbl.blg_tot_prmtn_frgnccy_amt,
      tbl.blg_net_tot_amt,
      tbl.blg_net_tot_frgnccy_amt,
      tbl.locl_crncy_cdv,
      tbl.frgnccy_cdv,
      tbl.sls_loc_id,
      tbl.blg_doc_stts_cdv,
      tbl.ordr_id,
      tbl.ordr_crt_dt,
      tbl.rfrnc_fscl_doc_num_val,
      tbl.crtd_by_id,
      tbl.crtd_dt,
      tbl.zsysid,
      tbl.zdel_ind,
      tbl.ztimestamp,
      tbl.zlsch,
      tbl.zterm,
      tbl.rfbsk,
      tbl.land1,
      tbl.bstnk_vf,
      tbl.vbtyp,
      tbl.fktyp,
      tbl.mwsbk,
      tbl.j_1afitp,
      tbl.aedat,
      tbl.bzirk,
      tbl.kdgrp,
      tbl.stwae,
      tbl.sfakn,
      tbl.ktopl,
      tbl.posid,
      tbl.fksto,
      tbl.kzwi1,
      tbl.kzwi2,
      tbl.kzwi3,
      tbl.kzwi4,
      tbl.kzwi5,
      tbl.kzwi6,
      tbl.netwr,
      tbl.vkorg,
      tbl.spart,
      tbl.dw_rownum,
      tbl.vf_status,
      tbl.clrst,
      tbl.rplnr
  from ACQ_P_STAGE.pgt_sls_billing_hdr_stg as tbl
  left outer join
  (
    select max(actvty.cur_btch_id) as mybtch_id, max(step.step_id) as mystep_id
    from PEPCMN_P.step
    inner join PEPCMN_P.actvty
      on actvty.actvty_id = step.actvty_id
    inner join PEPCMN_P.sys
      on sys.sys_nm = actvty.sys_nm
    where
      sys.sys_nm = 'ACQ' and
      actvty_nm = 'PGT_SLS_BILLING_HDR' and
      step_nm = 'PGT_SLS_BILLING_HDR_LOAD'
  ) this_step on 1=1
  inner join (select distinct blg_doc_id, mandt, zsysid, ERR_SVRTY from MYDAT_ERR_EVNT) errtbl
    on 
      coalesce(cast(errtbl.blg_doc_id as VARCHAR(40)),'~MEM~PEP~') = coalesce(cast(tbl.blg_doc_id as VARCHAR(40)),'~MEM~PEP~') and
      coalesce(cast(errtbl.mandt as VARCHAR(12)),'~MEM~PEP~') = coalesce(cast(tbl.mandt as VARCHAR(12)),'~MEM~PEP~') and
      coalesce(cast(errtbl.zsysid as VARCHAR(32)),'~MEM~PEP~') = coalesce(cast(tbl.zsysid as VARCHAR(32)),'~MEM~PEP~')

  where errtbl.ERR_SVRTY = 'CRIT';

 *** Insert completed. No rows added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


  delete ACQ_P_JOB.pgt_sls_billing_hdr_err
  where dw_last_updt_dt < (DATE - 30);

 *** Delete completed. No rows removed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  -- We will now capture some basic statistics in case the process wants to
  -- handle specific data error events or have specific thresholds in place
  .export report file=/etlapps/prds2/acq/sales/tmp/PGT_SLS_BILLING_HDR_PGT_SLS_BILLING_HDR_LOAD.val
 *** To reset export, type .EXPORT RESET
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  select
    err_cd || '|' ||
    err_svrty || '|' ||
    cast(total as varchar(100))  (TITLE '')
  from
  (select 
    err_cd, 
    err_svrty, 
    count(*) as total
  from MYDAT_ERR_EVNT
  group by 1,2 
  UNION ALL
  select 
    'ALL',
    err_svrty, 
    count(*) as total
  from MYDAT_ERR_EVNT
  group by 2) tbl;

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .export reset
 *** Output returned to console.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
Executing load task
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:20:25 2025 PID: 3856
 
+---------+---------+---------+---------+---------+---------+---------+----

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 6 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SET QUERY_BAND = 'ltype=acq;ltask=load;ltbl=pgt_sls_billing_hdr;' FOR SESSION;

 *** Set QUERY_BAND accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:20:31-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-





  -- We insert the source table into the core table using natural fact pk
  merge into ACQ_P_CORE.pgt_sls_billing_hdr
  using (
  select 
    stg.*
    ,mystep_id
    ,mybtch_id

    ,fk_pgt_sls_billing_hdr_stg_CK_CUST_ID.fk_CK_CUST_ID_surr

    ,fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID.fk_CK_SHIP_TO_CUST_ID_surr

    ,fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID.fk_LK_SLS_LOC_ID_surr

  from 
    ACQ_P_WORK.pgt_sls_billing_hdr_stg_cln as stg

  left outer join ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_CUST_ID on
    stg.blg_doc_id = fk_pgt_sls_billing_hdr_stg_CK_CUST_ID.blg_doc_id and
    stg.mandt = fk_pgt_sls_billing_hdr_stg_CK_CUST_ID.mandt and
    stg.zsysid = fk_pgt_sls_billing_hdr_stg_CK_CUST_ID.zsysid

  left outer join ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID on
    stg.blg_doc_id = fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID.blg_doc_id and
    stg.mandt = fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID.mandt and
    stg.zsysid = fk_pgt_sls_billing_hdr_stg_CK_SHIP_TO_CUST_ID.zsysid

  left outer join ACQ_P_WORK.fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID on
    stg.blg_doc_id = fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID.blg_doc_id and
    stg.mandt = fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID.mandt and
    stg.zsysid = fk_pgt_sls_billing_hdr_stg_LK_SLS_LOC_ID.zsysid

  left outer join
  (
    select max(actvty.cur_btch_id) as mybtch_id, max(step.step_id) as mystep_id
    from PEPCMN_P.step
    inner join PEPCMN_P.actvty
      on actvty.actvty_id = step.actvty_id
    inner join PEPCMN_P.sys
      on sys.sys_nm = actvty.sys_nm
    where
      sys.sys_nm = 'ACQ' and
      actvty_nm = 'PGT_SLS_BILLING_HDR' and
      step_nm = 'PGT_SLS_BILLING_HDR_LOAD'
  ) this_step on 1=1
  
  ) tbl
  on 
    (
      pgt_sls_billing_hdr.mandt = tbl.mandt and
      pgt_sls_billing_hdr.zsysid = tbl.zsysid and
      pgt_sls_billing_hdr.blg_doc_id = tbl.blg_doc_id

      -- and dw_sys_id = 702
    )
  when matched then
    update set 
      dw_sys_id = 702,
      dw_last_updt_dtm = CURRENT_TIMESTAMP(0),
      dw_step_id = tbl.mystep_id,
      dw_btch_id = tbl.mybtch_id,
      acq_mdm_sys_id = tbl.acq_mdm_sys_id,
      acq_pgt_sys_id = tbl.acq_pgt_sys_id,
      aedat = tbl.aedat,
      blg_doc_dt = tbl.blg_doc_dt,
      blg_doc_stts_cdv = tbl.blg_doc_stts_cdv,
      blg_grss_amt = tbl.blg_grss_amt,
      blg_grss_frgnccy_amt = tbl.blg_grss_frgnccy_amt,
      blg_net_tot_amt = tbl.blg_net_tot_amt,
      blg_net_tot_frgnccy_amt = tbl.blg_net_tot_frgnccy_amt,
      blg_tot_dscnt_amt = tbl.blg_tot_dscnt_amt,
      blg_tot_dscnt_frgnccy_amt = tbl.blg_tot_dscnt_frgnccy_amt,
      blg_tot_prmtn_amt = tbl.blg_tot_prmtn_amt,
      blg_tot_prmtn_frgnccy_amt = tbl.blg_tot_prmtn_frgnccy_amt,
      blg_typ_cdv = tbl.blg_typ_cdv,
      bstnk_vf = tbl.bstnk_vf,
      bzirk = tbl.bzirk,
      co_cdv = tbl.co_cdv,
      clrst = tbl.clrst,
      crtd_by_id = tbl.crtd_by_id,
      crtd_dt = tbl.crtd_dt,
      cust_id = tbl.cust_id,
      dstrbtn_chnl_cdv = tbl.dstrbtn_chnl_cdv,
      dw_rownum = tbl.dw_rownum,
      exch_rt_amt = tbl.exch_rt_amt,
      fksto = tbl.fksto,
      fktyp = tbl.fktyp,
      frgnccy_cdv = tbl.frgnccy_cdv,
      j_1afitp = tbl.j_1afitp,
      kdgrp = tbl.kdgrp,
      ktopl = tbl.ktopl,
      kzwi1 = tbl.kzwi1,
      kzwi2 = tbl.kzwi2,
      kzwi3 = tbl.kzwi3,
      kzwi4 = tbl.kzwi4,
      kzwi5 = tbl.kzwi5,
      kzwi6 = tbl.kzwi6,
      land1 = tbl.land1,
      locl_crncy_cdv = tbl.locl_crncy_cdv,
      mwsbk = tbl.mwsbk,
      netwr = tbl.netwr,
      ordr_crt_dt = tbl.ordr_crt_dt,
      ordr_id = tbl.ordr_id,
      posid = tbl.posid,
      pstng_dtm = tbl.pstng_dtm,
      rec_crtd_dtm = tbl.rec_crtd_dtm,
      rfbsk = tbl.rfbsk,
      rfrnc_doc_id = tbl.rfrnc_doc_id,
      rfrnc_fscl_doc_num_val = tbl.rfrnc_fscl_doc_num_val,
      rplnr = tbl.rplnr,
      sfakn = tbl.sfakn,
      ship_to_cust_id = tbl.ship_to_cust_id,
      sls_loc_id = tbl.sls_loc_id,
      stwae = tbl.stwae,
      spart = tbl.spart,
      vbtyp = tbl.vbtyp,
      vf_status = tbl.vf_status,
      vkorg = tbl.vkorg,
      zdel_ind = tbl.zdel_ind,
      zlsch = tbl.zlsch,
      zterm = tbl.zterm,
      ztimestamp = tbl.ztimestamp,

      dw_cust_id_cust_id = tbl.fk_ck_cust_id_surr,
      dw_cust_id_ship_to_cust_id = tbl.fk_ck_ship_to_cust_id_surr,
      dw_loc_id = tbl.fk_lk_sls_loc_id_surr
  when not matched then
    insert 
    (
      dw_sys_id,
      dw_step_id,
      dw_btch_id,
      mandt,
      zsysid,
      blg_doc_id,
      acq_mdm_sys_id,
      acq_pgt_sys_id,
      aedat,
      blg_doc_dt,
      blg_doc_stts_cdv,
      blg_grss_amt,
      blg_grss_frgnccy_amt,
      blg_net_tot_amt,
      blg_net_tot_frgnccy_amt,
      blg_tot_dscnt_amt,
      blg_tot_dscnt_frgnccy_amt,
      blg_tot_prmtn_amt,
      blg_tot_prmtn_frgnccy_amt,
      blg_typ_cdv,
      bstnk_vf,
      bzirk,
      co_cdv,
      clrst,
      crtd_by_id,
      crtd_dt,
      cust_id,
      dstrbtn_chnl_cdv,
      dw_rownum,
      exch_rt_amt,
      fksto,
      fktyp,
      frgnccy_cdv,
      j_1afitp,
      kdgrp,
      ktopl,
      kzwi1,
      kzwi2,
      kzwi3,
      kzwi4,
      kzwi5,
      kzwi6,
      land1,
      locl_crncy_cdv,
      mwsbk,
      netwr,
      ordr_crt_dt,
      ordr_id,
      posid,
      pstng_dtm,
      rec_crtd_dtm,
      rfbsk,
      rfrnc_doc_id,
      rfrnc_fscl_doc_num_val,
      rplnr,
      sfakn,
      ship_to_cust_id,
      sls_loc_id,
      stwae,
      spart,
      vbtyp,
      vf_status,
      vkorg,
      zdel_ind,
      zlsch,
      zterm,
      ztimestamp,

      dw_cust_id_cust_id,
      dw_cust_id_ship_to_cust_id,
      dw_loc_id
    )
    values 
    (
      702,
      mystep_id,
      mybtch_id,
      tbl.mandt,
      tbl.zsysid,
      tbl.blg_doc_id
,
      tbl.acq_mdm_sys_id,
      tbl.acq_pgt_sys_id,
      tbl.aedat,
      tbl.blg_doc_dt,
      tbl.blg_doc_stts_cdv,
      tbl.blg_grss_amt,
      tbl.blg_grss_frgnccy_amt,
      tbl.blg_net_tot_amt,
      tbl.blg_net_tot_frgnccy_amt,
      tbl.blg_tot_dscnt_amt,
      tbl.blg_tot_dscnt_frgnccy_amt,
      tbl.blg_tot_prmtn_amt,
      tbl.blg_tot_prmtn_frgnccy_amt,
      tbl.blg_typ_cdv,
      tbl.bstnk_vf,
      tbl.bzirk,
      tbl.co_cdv,
      tbl.clrst,
      tbl.crtd_by_id,
      tbl.crtd_dt,
      tbl.cust_id,
      tbl.dstrbtn_chnl_cdv,
      tbl.dw_rownum,
      tbl.exch_rt_amt,
      tbl.fksto,
      tbl.fktyp,
      tbl.frgnccy_cdv,
      tbl.j_1afitp,
      tbl.kdgrp,
      tbl.ktopl,
      tbl.kzwi1,
      tbl.kzwi2,
      tbl.kzwi3,
      tbl.kzwi4,
      tbl.kzwi5,
      tbl.kzwi6,
      tbl.land1,
      tbl.locl_crncy_cdv,
      tbl.mwsbk,
      tbl.netwr,
      tbl.ordr_crt_dt,
      tbl.ordr_id,
      tbl.posid,
      tbl.pstng_dtm,
      tbl.rec_crtd_dtm,
      tbl.rfbsk,
      tbl.rfrnc_doc_id,
      tbl.rfrnc_fscl_doc_num_val,
      tbl.rplnr,
      tbl.sfakn,
      tbl.ship_to_cust_id,
      tbl.sls_loc_id,
      tbl.stwae,
      tbl.spart,
      tbl.vbtyp,
      tbl.vf_status,
      tbl.vkorg,
      tbl.zdel_ind,
      tbl.zlsch,
      tbl.zterm,
      tbl.ztimestamp,

      tbl.fk_ck_cust_id_surr,
      tbl.fk_ck_ship_to_cust_id_surr,
      tbl.fk_lk_sls_loc_id_surr
    );

 *** Merge completed. 126575 rows affected.
     32720 rows inserted, 93855 rows updated, no rows deleted.
 *** Total elapsed time was 2 seconds.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-



  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
Executing loadstats task
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:20:33 2025 PID: 4327
 
+---------+---------+---------+---------+---------+---------+---------+----

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 11 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SET QUERY_BAND = 'ltype=acq;ltask=loadmetrics;ltbl=pgt_sls_billing_hdr;' FOR SESSION;

 *** Set QUERY_BAND accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:20:44-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- insert the load statistics that are meant to occur (actually occurs before the load)
  insert into PEPCMN_P_DATA.LD_STATCS (
    step_id, 
    btch_id, 
    db, 
    tbl, 
    stage_tot, 
    clean_tot, 
    insrt_tot, 
    updt_tot, 
    del_tot) 
  select 
    step_id, 
    cur_btch_id, 
    databasename, 
    tablename, 
    stg_total, 
    cln_total,
    NULL,
    NULL,
    NULL
  from 
  (
  select 
    this_step.step_id, 
    this_step.cur_btch_id, 
    databasename, 
    tablename, 
    tbl1.*

    ,tbl2.*

  from dbc.tablesv 
  cross join
  (
    select max(actvty.cur_btch_id) as cur_btch_id, max(step.step_id) as step_id
    from PEPCMN_P.step
    inner join PEPCMN_P.actvty
      on actvty.actvty_id = step.actvty_id
    inner join PEPCMN_P.sys
      on sys.sys_nm = actvty.sys_nm
    where
      sys.sys_nm = 'ACQ' and
      actvty_nm = 'PGT_SLS_BILLING_HDR' and
      step_nm = 'PGT_SLS_BILLING_HDR_LOAD'
  ) this_step
  cross join 
  -- STAGE TABLE TOTAL
  (select count(*) as stg_total from ACQ_P_STAGE.pgt_sls_billing_hdr_stg) tbl1

  cross join 
  -- CLEAN TABLE TOTAL
  (select count(*) as cln_total from ACQ_P_WORK.pgt_sls_billing_hdr_stg_cln) tbl2

  where LOWER(databasename)=LOWER('ACQ_P_CORE') and 
        LOWER(tablename)=LOWER('pgt_sls_billing_hdr')
  ) tbl;

 *** Insert completed. One row added. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
Executing collectstats task
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:20:44 2025 PID: 4974
 
+---------+---------+---------+---------+---------+---------+---------+----

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 1 second.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set errorlevel 3624 severity 0;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SET QUERY_BAND = 'ltype=acq;ltask=stats;ltbl=pgt_sls_billing_hdr;' FOR SESSION;

 *** Set QUERY_BAND accepted. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:20:45-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  -- We execute the collect statistics command for the column on the master table
  COLLECT STATISTICS ON ACQ_P_CORE.pgt_sls_billing_hdr;

 *** Update completed. 16 rows changed. 
 *** Total elapsed time was 3 seconds.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORCODE = 3624 THEN .GOTO FIRSTTIME_STATS;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .GOTO DONE;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .LABEL FIRSTTIME_STATS
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  collect statistics 

     column (acq_mdm_sys_id),

     column (acq_pgt_sys_id),

     column (blg_doc_id),

     column (mandt),

     column (zsysid),

     column (dw_cust_id_cust_id),

     column (dw_cust_id_ship_to_cust_id),

     column (dw_loc_id),    
     index nupi_pgt_sls_billing_hdr,

    column ( partition )
  on ACQ_P_CORE.pgt_sls_billing_hdr;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
 *** Skipped.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .LABEL DONE
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
Executing clesend task
ErrTable:pgt_sls_billing_hdr_err
Err2Table:pgt_sls_billing_hdr_err2
ErrStep:PGT_SLS_BILLING_HDR_LOAD
Host:peplap00726
ENV_LINK1:https://ews.mypepsico.com/acq_err/?acq_table=pgt_sls_billing_hdr_err&amp;acq_max=100&amp;acq_date=&amp;action=View&amp;mode=rejected&amp;acq_batch=
ENV_LINK2:https://ews.mypepsico.com/acq_err/?acq_table=pgt_sls_billing_hdr_err2&amp;acq_max=100&amp;acq_date=&amp;action=View&amp;mode=rejected&amp;acq_batch=
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:20:48 2025 PID: 5102
 
+---------+---------+---------+---------+---------+---------+---------+----
.set titledashes off;
+---------+---------+---------+---------+---------+---------+---------+----

        .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 10 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
        .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

        .set width 4500
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
        .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

        SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
2025-08-07 22:20:58-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  select 1 from dbc.tablesv 
  where 
  LOWER(databasename) = LOWER('ACQ_P_JOB') and
  LOWER(tablename) = LOWER('pgt_sls_billing_hdr_err');

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

   1
   1

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .IF ACTIVITYCOUNT = 0 THEN .GOTO skip_err_check;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  
.export report file /etlapps/prds2/acq/cmn/tmp/PGT_SLS_BILLING_HDR_PGT_SLS_BILLING_HDR_LOAD_ERR.xml;
 *** To reset export, type .EXPORT RESET
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
        SELECT
                '<ExceptionRequest xmlns="http://www.PepsiCo.com/unique/default/namespace/CommonLE">
                <Header>
                <ApplicationID>ACQ</ApplicationID>
                <ServiceName>ACQ_LOADER</ServiceName>
                <ComponentName>SOURCE_TO_CORE</ComponentName>
                <Hostname>peplap00726</Hostname>
                <Timestamp>2025-08-07T22:20:48</Timestamp>
                </Header>
                <Category>LOAD_ERROR</Category>
                <Type>'||UPPER('pgt')||'</Type>
                <Severity>2</Severity>
                <Code>N/A</Code>
                <Message>Error Records: '||TRIM(ERR_COUNT)||'; Error table: pgt_sls_billing_hdr_err</Message>
                <DumpAnalysis>&#xD;----------------- &#xD; SYSTEM: ACQ;  ACTIVITY: PGT_SLS_BILLING_HDR;  STEP: PGT_SLS_BILLING_HDR_LOAD;  TABLE: pgt_sls_billing_hdr_err;&#xD;STEP_ID: '||DW_STEP_ID||';  BATCH_ID: '||DW_BTCH_ID||';&#xD;QUERY: select * from ACQ_P_JOB.pgt_sls_billing_hdr_err where DW_BTCH_ID in ('||DW_BTCH_ID||');&#xD;Web Link: https://ews.mypepsico.com/acq_err/?acq_table=pgt_sls_billing_hdr_err&amp;acq_max=100&amp;acq_date=&amp;action=View&amp;mode=rejected&amp;acq_batch='||DW_BTCH_ID||'</DumpAnalysis>
                </ExceptionRequest>' (TITLE '')
        FROM
                (       SELECT
                                TRIM(DW_BTCH_ID(INTEGER)) AS DW_BTCH_ID, 
        TRIM(DW_STEP_ID(INTEGER)) AS DW_STEP_ID,
        COUNT(*) as ERR_COUNT
                        FROM
                                ACQ_P_JOB.pgt_sls_billing_hdr_err ERR
                                JOIN PEPCMN_P.ACTVTY A
                                        ON ERR.DW_BTCH_ID = A.CUR_BTCH_ID
                                JOIN PEPCMN_P.STEP S
                                        ON A.ACTVTY_ID=S.ACTVTY_ID
                                        AND ERR.DW_STEP_ID=S.STEP_ID
                        WHERE
                                SYS_NM='ACQ'
                                AND ACTVTY_NM='PGT_SLS_BILLING_HDR'
                                -- AND STEP_NM='PGT_SLS_BILLING_HDR_LOAD'
                        GROUP BY 1,2
                        HAVING ERR_COUNT>0
                )A;

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
    
.export reset;
 *** Output returned to console.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
.label skip_err_check;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

                select 1 from dbc.tablesv
                where
                LOWER(databasename) = LOWER('ACQ_P_JOB') and
                LOWER(tablename) = LOWER('pgt_sls_billing_hdr_err2');

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

   1
   1

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

                .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
                .IF ACTIVITYCOUNT = 0 THEN .GOTO skip_err2_check;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-


.export report file /etlapps/prds2/acq/cmn/tmp/PGT_SLS_BILLING_HDR_PGT_SLS_BILLING_HDR_LOAD_ERR2.xml;
 *** To reset export, type .EXPORT RESET
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
        SELECT
                '<ExceptionRequest xmlns="http://www.PepsiCo.com/unique/default/namespace/CommonLE">
                <Header>
                <ApplicationID>ACQ</ApplicationID>
                <ServiceName>ACQ_LOADER</ServiceName>
                <ComponentName>SOURCE_TO_CORE</ComponentName>
                <Hostname>peplap00726</Hostname>
                <Timestamp>2025-08-07T22:20:48</Timestamp>
                </Header>
                <Category>LOAD_ERROR</Category>
                <Type>'||UPPER('pgt')||'</Type>
                <Severity>2</Severity>
                <Code>N/A</Code>
                <Message>Error Records: '||TRIM(ERR_COUNT)||'; Error table: pgt_sls_billing_hdr_err2</Message>
				<DumpAnalysis>&#xD;-----------------&#xD;SYSTEM: ACQ;  ACTIVITY: PGT_SLS_BILLING_HDR;  STEP: PGT_SLS_BILLING_HDR_LOAD;  TABLE: pgt_sls_billing_hdr_err;&#xD;STEP_ID: '||DW_STEP_ID||';  BATCH_ID: '||DW_BTCH_ID||';&#xD;QUERY: select * from ACQ_P_JOB.pgt_sls_billing_hdr_err2 where DW_BTCH_ID in ('||DW_BTCH_ID||');&#xD;Web Link: https://ews.mypepsico.com/acq_err/?acq_table=pgt_sls_billing_hdr_err2&amp;acq_max=100&amp;acq_date=&amp;action=View&amp;mode=rejected&amp;acq_batch='||DW_BTCH_ID||'</DumpAnalysis>
                </ExceptionRequest>' (TITLE '')
        FROM
                (       SELECT
                                TRIM(DW_BTCH_ID(INTEGER)) AS DW_BTCH_ID, 
        TRIM(DW_STEP_ID(INTEGER)) AS DW_STEP_ID,
        COUNT(*) as ERR_COUNT
                        FROM
                                ACQ_P_JOB.pgt_sls_billing_hdr_err2 ERR
                                JOIN PEPCMN_P.ACTVTY A
                                        ON ERR.DW_BTCH_ID = A.CUR_BTCH_ID
                                JOIN PEPCMN_P.STEP S
                                        ON A.ACTVTY_ID=S.ACTVTY_ID
                                        AND ERR.DW_STEP_ID=S.STEP_ID
                        WHERE
                                SYS_NM='ACQ'
                                AND ACTVTY_NM='PGT_SLS_BILLING_HDR'
                                -- AND STEP_NM='PGT_SLS_BILLING_HDR_LOAD'
                        GROUP BY 1,2
                        HAVING ERR_COUNT>0
                )A;

 *** Query completed. No rows found. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  
.export reset;
 *** Output returned to console.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
.label skip_err2_check;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

.logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
.quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
ERR_Size:0 ERR2_Size:0
TPT load completed successfully
/etlapps/prds2/acq/stg/tmp/PGT_SLS_BILLING_HDR.scs created
/etlapps/prds2/acq/sales/tmp/PGT_SLS_BILLING_HDR.PGT_SLS_BILLING_HDR_LOAD.wkf
Load completed  successfully
-------- START EXECUTING ARCHIVE PROCESS --------
**********Zipping the Source Files**********

Source file not found 


Source file not found 


Source file not found 


Renaming ACQ_PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt Files


Zipping PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt Files 


File PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt Zipped Successfully 


Archiving PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt Files 


File PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt Archived Successfully 


Time stamp NOT required for the file PGT_ZGGL_OTC_CVI_BILLING_HDR_20250808030231.txt ...
Zipping and Archiving the Process file
Zipping the pgt_sls_billing_hdr.prcs Process File


Zipping pgt_sls_billing_hdr.prcs Process File completed successfully
Archiving the Process File


Archiving pgt_sls_billing_hdr.prcs.gz Process File completed successfully
Deleting Temporary File
Successfully Deleted Temporary File
-------- ARCHIVE PROCESS COMPLETED SUCCESSFULLY --------
Archiving completed successfully
************ TPT GENERIC SCRIPT COMPLETED SUCESSFULLY**************
BTEQ 16.20.00.10 (64-bit) Thu Aug  7 22:21:03 2025 PID: 8248
 
+---------+---------+---------+---------+---------+---------+---------+----

  .run file /etlapps/prds2/acq/sales/bin/cmn_tdlogon.btq
+---------+---------+---------+---------+---------+---------+---------+----
.logon tdprod/ACQ_BATCH_P,

 *** Logon successfully completed.
 *** Teradata Database Release is 17.20.03.16a                  
 *** Teradata Database Version is 17.20.03.16                     
 *** Transaction Semantics are BTET.
 *** Session Character Set Name is 'ASCII'.
 
 *** Total elapsed time was 20 seconds.
 
+---------+---------+---------+---------+---------+---------+---------+----
 *** Encountered EOF on RUN file. Returning to stdin.
+---------+---------+---------+---------+---------+---------+---------+----
  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+----

  .set width 254
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  .set maxerror 4
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  SELECT CURRENT_TIMESTAMP(0);

 *** Query completed. One row found. One column returned. 
 *** Total elapsed time was 1 second.

     Current TimeStamp(0)
-------------------------
2025-08-07 22:21:23-05:00

+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-
  
  EXEC PEPCMN_P.STEP_END('ACQ', 'PGT_SLS_BILLING_HDR', 'PGT_SLS_BILLING_HDR_LOAD');

 *** Update completed. One row changed. 
 *** Total elapsed time was 1 second.


+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .IF ERRORLEVEL <> 0 THEN .QUIT ERRORLEVEL;
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .logoff;
 *** You are now logged off from the DBC.
+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-

  .quit;
 *** Exiting BTEQ...
 *** RC (return code) = 0 
Return Code 0
